"""Add invoice and invoice item models and relationships

Revision ID: <Your Revision ID will be here>
Revises: <Previous Revision ID>
Create Date: <Your Create Date>

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '<Your Revision ID will be here>'
down_revision = '<Previous Revision ID>'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('invoice',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('invoice_number', sa.String(length=100), nullable=False),
    sa.Column('invoice_date', sa.Date(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('contractor_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['contractor_id'], ['contractor.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('invoice_number')
    )
    op.create_table('invoice_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoice.id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('payment', schema=None) as batch_op:
        # START: *** THE FIX ***
        # The column is now added as nullable=True to avoid conflict with existing data.
        batch_op.add_column(sa.Column('invoice_id', sa.Integer(), nullable=True))
        # END: *** THE FIX ***
        batch_op.create_foreign_key('fk_payment_invoice_id', 'invoice', ['invoice_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('payment', schema=None) as batch_op:
        batch_op.drop_constraint('fk_payment_invoice_id', type_='foreignkey')
        batch_op.drop_column('invoice_id')

    op.drop_table('invoice_item')
    op.drop_table('invoice')
    # ### end Alembic commands ###